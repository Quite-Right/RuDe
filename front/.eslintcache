[{"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\index.tsx":"1","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\reportWebVitals.ts":"2","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\App.tsx":"3","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Report\\Report.tsx":"4","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\AlertTemplate.tsx":"5","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\InputFile\\InputFile.tsx":"6","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\Close.tsx":"7","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\BaseIcon.tsx":"8","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\ErrorIcon.tsx":"9"},{"size":517,"mtime":1611941917240,"results":"10","hashOfConfig":"11"},{"size":440,"mtime":1611941917247,"results":"12","hashOfConfig":"11"},{"size":1366,"mtime":1611945656540,"results":"13","hashOfConfig":"11"},{"size":1873,"mtime":1611941917238,"results":"14","hashOfConfig":"11"},{"size":1133,"mtime":1611945665351,"results":"15","hashOfConfig":"11"},{"size":3619,"mtime":1611945680563,"results":"16","hashOfConfig":"11"},{"size":271,"mtime":1611944620565,"results":"17","hashOfConfig":"11"},{"size":415,"mtime":1611944518201,"results":"18","hashOfConfig":"11"},{"size":295,"mtime":1611944651464,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17wqw16",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\index.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\reportWebVitals.ts",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\App.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Report\\Report.tsx",["40"],"import { useParams } from \"react-router-dom\";\r\nconst data = [\r\n    {\r\n        type: \"type 1\",\r\n        thread: \"thread 1\",\r\n        source: \"source 1\"\r\n    },\r\n    {\r\n        type: \"type 2\",\r\n        thread: \"thread 2\",\r\n        source: \"source 2\"\r\n    },\r\n    {\r\n        type: \"type 3\",\r\n        thread: \"thread 3\",\r\n        source: \"source 3\"\r\n    },\r\n    {\r\n        type: \"type 4\",\r\n        thread: \"thread 4\",\r\n        source: \"source 4\"\r\n    }\r\n]\r\n\r\ninterface IParams{\r\n  id: string;\r\n}\r\n\r\nconst Report = () => {\r\n    const {id} = useParams<IParams>();\r\n    return (\r\n        <div className=\"report\">\r\n            <table className=\"report__table\">\r\n                <tr className=\"report__table__header\">\r\n                    <td className=\"report__table__header__first\">Type</td>\r\n                    <td className=\"report__table__header__second\">Thread</td>\r\n                    <td className=\"report__table__header__third\">Source</td>\r\n                </tr>\r\n                {data.map(({ type, thread, source }) => {\r\n                    return (\r\n                        <tr className=\"report__table__body\">\r\n                            <td className=\"report__table__body__first\">{type}</td>\r\n                            <td className=\"report__table__body__second\">{thread}</td>\r\n                            <td className=\"report__table__body__third\">{source}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n\r\n            </table>\r\n\r\n            <div className=\"report__result\">\r\n                <div className=\"report__result__button unselectable\" id=\"good\">No threat detected</div>\r\n                <div className=\"report__result__button unselectable\" id=\"bad\">Threat detected</div>\r\n                {/* <div onClick={() => console.log(Path)}>Path</div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report\r\n",["41","42"],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\AlertTemplate.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\InputFile\\InputFile.tsx",["43","44","45"],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\Close.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\BaseIcon.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\ErrorIcon.tsx",[],{"ruleId":"46","severity":1,"message":"47","line":30,"column":12,"nodeType":"48","messageId":"49","endLine":30,"endColumn":14},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":8,"column":9,"nodeType":"48","messageId":"49","endLine":8,"endColumn":12},{"ruleId":"46","severity":1,"message":"55","line":11,"column":10,"nodeType":"48","messageId":"49","endLine":11,"endColumn":19},{"ruleId":"46","severity":1,"message":"56","line":11,"column":21,"nodeType":"48","messageId":"49","endLine":11,"endColumn":33},"@typescript-eslint/no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'ref' is assigned a value but never used.","'errorName' is assigned a value but never used.","'setErrorName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]