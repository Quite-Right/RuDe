[{"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\index.tsx":"1","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\reportWebVitals.ts":"2","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\App.tsx":"3","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\AlertTemplate.tsx":"4","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\InputFile\\InputFile.tsx":"5","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Report\\Report.tsx":"6","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Header\\Header.tsx":"7","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\Close.tsx":"8","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\ErrorIcon.tsx":"9","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\TableRow\\TableRow.tsx":"10","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\TextField\\TextField.tsx":"11","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Button\\Button.tsx":"12","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\BaseIcon.tsx":"13","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Test\\Test.tsx":"14","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Status\\Status.tsx":"15","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Tag\\Tag.tsx":"16"},{"size":517,"mtime":1611941917240,"results":"17","hashOfConfig":"18"},{"size":440,"mtime":1611941917247,"results":"19","hashOfConfig":"18"},{"size":1590,"mtime":1611990951156,"results":"20","hashOfConfig":"18"},{"size":1133,"mtime":1611947370867,"results":"21","hashOfConfig":"18"},{"size":3795,"mtime":1611989378792,"results":"22","hashOfConfig":"18"},{"size":2040,"mtime":1611988302130,"results":"23","hashOfConfig":"18"},{"size":347,"mtime":1611987751596,"results":"24","hashOfConfig":"18"},{"size":271,"mtime":1611944620565,"results":"25","hashOfConfig":"18"},{"size":295,"mtime":1611944651464,"results":"26","hashOfConfig":"18"},{"size":626,"mtime":1611987751613,"results":"27","hashOfConfig":"18"},{"size":547,"mtime":1611987751620,"results":"28","hashOfConfig":"18"},{"size":694,"mtime":1611987751587,"results":"29","hashOfConfig":"18"},{"size":415,"mtime":1611944518201,"results":"30","hashOfConfig":"18"},{"size":367,"mtime":1611991220379,"results":"31","hashOfConfig":"18"},{"size":631,"mtime":1611991560805,"results":"32","hashOfConfig":"18"},{"size":465,"mtime":1611991430699,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"17wqw16",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\index.tsx",[],["69","70"],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\reportWebVitals.ts",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\App.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\AlertTemplate.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\InputFile\\InputFile.tsx",["71","72","73"],"import { useState, useRef } from 'react';\r\nimport { useAlert } from \"react-alert\";\r\nimport styled from 'styled-components';\r\nimport { Download } from \"@styled-icons/bootstrap\";\r\nimport { Close } from \"@styled-icons/ionicons-sharp\";\r\n\r\nconst WhiteDownload = styled(Download)`\r\n  color: white;\r\n`\r\n\r\nconst WhiteClose = styled(Close)`\r\n  color: white;\r\n`\r\n\r\nfunction InputFile() {\r\n  const [upload, setUpload] = useState<any | undefined>(undefined);\r\n  const ref = useRef();\r\n  const [drag, setDrag] = useState(false);\r\n  //const [hasError, setHasError] = useState(false);\r\n  const [errorName, setErrorName] = useState(\"\");\r\n  const alert = useAlert();\r\n\r\n  function dragStartHandler(e: React.DragEvent<HTMLDivElement>) {\r\n    e.preventDefault()\r\n    setDrag(true)\r\n  }\r\n\r\n  function dragLeaveHandler(e: React.DragEvent<HTMLDivElement>) {\r\n    e.preventDefault()\r\n    setDrag(false)\r\n  }\r\n\r\n  function onDropHandler(e: React.DragEvent<HTMLDivElement>) {\r\n    e.preventDefault()\r\n    let file = e.dataTransfer.files[0]\r\n    validateInput(file)\r\n    setDrag(false)\r\n    setUpload(file)\r\n  }\r\n\r\n  function handleUpload() {\r\n    const hasError = validateInput(upload)\r\n    if (!hasError) {\r\n      console.log(upload)\r\n    }\r\n  }\r\n\r\n  function validateInput(e: any) {\r\n    let split = e.name.split(\".\");\r\n    if (split[split.length - 1] !== \"txt\") {\r\n      //setErrorName(\"Wrong file format\");\r\n      alert.error(\"Wrong file format\")\r\n      //setHasError(true);\r\n      return true;\r\n    } else if (e.size > 1024 * 1024 * 10) {\r\n      //setErrorName(\"File size larger than 10Mb\");\r\n      alert.error(\"File size larger than 10Mb\")\r\n      //setHasError(true);\r\n      return true;\r\n    } else {\r\n      // setHasError(false);\r\n      // setErrorName(\"\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"input unselectable\">\r\n      <div className=\"input__content\">\r\n        {upload ?\r\n          //Файл заружен\r\n          <div className=\"loaded\">\r\n            <WhiteClose onClick={() => setUpload(undefined)} className=\"loaded__cancel\" />\r\n            <div className=\"loaded__name\">\r\n              {upload.name}\r\n            </div>\r\n          </div>\r\n          : drag\r\n            //Дрoп файла\r\n            ?\r\n            <div\r\n              onDragStart={e => dragStartHandler(e)}\r\n              onDragLeave={e => dragLeaveHandler(e)}\r\n              onDragOver={e => dragStartHandler(e)}\r\n              onDrop={e => onDropHandler(e)}\r\n              className=\"waiting-drop\">\r\n              <WhiteDownload className=\"waiting__icon\" />\r\n              <label className=\"waiting__label-main\">Drop to upload</label>\r\n            </div>\r\n            //oснoвнoй\r\n            :\r\n            <div\r\n              onDragStart={e => dragStartHandler(e)}\r\n              onDragLeave={e => dragLeaveHandler(e)}\r\n              onDragOver={e => dragStartHandler(e)}\r\n              className=\"waiting\">\r\n              <WhiteDownload className=\"waiting__icon\" />\r\n              <label className=\"waiting__label-main\">Drag file here</label>\r\n              <div className=\"waiting__sub-text\">\r\n                <label className=\"waiting__label-sub\">Or </label>\r\n                <label htmlFor=\"file\" className=\"waiting__label-link\"> choose a file</label>\r\n              </div>\r\n\r\n            </div>}\r\n      </div>\r\n      {!upload ?\r\n        <input type=\"file\" id=\"file\" name=\"file\" className=\"display-none\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n          if (e && e.target && e.target.files && e.target.files[0]) {\r\n            setUpload(e.target.files[0]);\r\n          }\r\n        }} />\r\n        : \"\"}\r\n      <button className=\"input__upload\" onClick={(e) => handleUpload()} disabled={upload ? false : true}>Upload</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputFile","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Report\\Report.tsx",["74","75","76","77"],"import { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Tag from \"../Tag/Tag\";\r\nimport TableRow from \"../TableRow/TableRow\";\r\nimport TextField from \"../TextField/TextField\";\r\nimport Button from \"../Button/Button\";\r\nimport Status from \"../Status/Status\";\r\nimport { useFormik } from 'formik';\r\n\r\nconst data = [\r\n  {\r\n    type: \"type 1\",\r\n    thread: \"thread 1\",\r\n    source: \"source 1\"\r\n  },\r\n  {\r\n    type: \"type 2\",\r\n    thread: \"thread 2\",\r\n    source: \"source 2\"\r\n  },\r\n  {\r\n    type: \"type 3\",\r\n    thread: \"thread 3\",\r\n    source: \"source 3\"\r\n  },\r\n  {\r\n    type: \"type 4\",\r\n    thread: \"thread 4\",\r\n    source: \"source 4\"\r\n  }\r\n]\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst Report = () => {\r\n  const { id } = useParams<IParams>();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      comment: \"\"\r\n    },\r\n    onSubmit: (values: any) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  // const [comment, setComment] = useState<string>(\"\")\r\n  return (\r\n    <div className=\"report\">\r\n      <div className=\"report__id\">Отчет #{id}</div>\r\n      <div className=\"report__id\">Похожие отчеты</div>\r\n      <table className=\"table\">\r\n        <tbody>\r\n          <TableRow rowKey={\"CVE\"} tooltip={\"https://nvd.nist.gov/vuln\"}>\r\n            <div>123</div>\r\n          </TableRow>\r\n          <TableRow rowKey={\"CVE\"} tooltip={\"https://nvd.nist.gov/vuln\"}>\r\n            <div>123</div>\r\n          </TableRow>\r\n        </tbody>\r\n\r\n      </table>\r\n      <TextField className=\"comment-field\" label=\"Оставить комментарий\" value={formik.values.comment} onChange={formik.handleChange(\"comment\")} />\r\n      <div className=\"report__result\">\r\n        <Button>No threat detected</Button>\r\n        <Button>More Work</Button>\r\n        <Button>Threat detected</Button>\r\n      </div>\r\n      <Button className=\"report-submit-btn\" type=\"submit\" onClick={() => formik.handleSubmit()}>Отправить отчет</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Report\r\n","C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\Close.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\ErrorIcon.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\TableRow\\TableRow.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\TextField\\TextField.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Button\\Button.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\AlertTemplate\\BaseIcon.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Test\\Test.tsx",[],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Status\\Status.tsx",["78"],"C:\\Users\\snfri\\Documents\\data\\Frontend\\develop\\RuDe\\front\\src\\components\\Tag\\Tag.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":17,"column":9,"nodeType":"85","messageId":"86","endLine":17,"endColumn":12},{"ruleId":"83","severity":1,"message":"87","line":20,"column":10,"nodeType":"85","messageId":"86","endLine":20,"endColumn":19},{"ruleId":"83","severity":1,"message":"88","line":20,"column":21,"nodeType":"85","messageId":"86","endLine":20,"endColumn":33},{"ruleId":"83","severity":1,"message":"89","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":18},{"ruleId":"83","severity":1,"message":"90","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":11},{"ruleId":"83","severity":1,"message":"91","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":14},{"ruleId":"83","severity":1,"message":"92","line":10,"column":7,"nodeType":"85","messageId":"86","endLine":10,"endColumn":11},{"ruleId":"83","severity":1,"message":"93","line":3,"column":11,"nodeType":"85","messageId":"86","endLine":3,"endColumn":16},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"@typescript-eslint/no-unused-vars","'ref' is assigned a value but never used.","Identifier","unusedVar","'errorName' is assigned a value but never used.","'setErrorName' is assigned a value but never used.","'useState' is defined but never used.","'Tag' is defined but never used.","'Status' is defined but never used.","'data' is assigned a value but never used.","'props' is defined but never used.","no-global-assign","no-unsafe-negation"]